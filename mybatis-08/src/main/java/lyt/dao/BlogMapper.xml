<?xml version="1.0" encoding="UTF8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lyt.dao.BlogMapper">


    <insert id="addBlog" parameterType="blog">
        insert into mybatis.blog (id, title, author, create_time, views)
        values (#{id}, #{title}, #{author}, #{createTime}, #{views});
    </insert>

    <sql id="if-title-author">
        <if test="title!=null">
            title=#{title}
        </if>
        <if test="author!=null">
            and author=#{author}
        </if>
    </sql>

    <select id="queryBlogIF" parameterType="map" resultType="blog">
        select *
        from mybatis.blog
        <where>
            <include refid="if-title-author">

            </include>
        </where>
    </select>

    <!--    <select id="queryBlogIF" parameterType="map" resultType="blog">-->
    <!--        select *-->
    <!--        from mybatis.blog-->
    <!--        where 1=1-->
    <!--        <if test="title!=null">-->
    <!--            and title=#{title}-->
    <!--        </if>-->
    <!--        <if test="author!=null">-->
    <!--            and author=#{author}-->
    <!--        </if>-->
    <!--    </select>-->

    <select id="queryBlogWhere" parameterType="map" resultType="blog">
        select * from mybatis.blog
        <where>
            <if test="title!=null">
                title=#{title}
            </if>
            <if test="author!=null">
                and author=#{author}
            </if>
        </where>
    </select>

    <select id="queryBlogChoose" parameterType="map" resultType="blog">
        select *
        from mybatis.blog
        <where>
            <choose>
                <when test="title!=null">
                    title=#{title}
                </when>
                <when test="author!=null">
                    and author=#{author}
                </when>
                <otherwise>
                    and views=#{views}
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateBlog" parameterType="map">
        update mybatis.blog
        <set>
            <if test="title!=null">
                title=#{title},
            </if>
            <if test="author!=null">
                author=#{author}
            </if>
        </set>
        where id=#{id}
    </update>

    <update id="updateBlogByTrim" parameterType="map">
        update mybatis.blog
        <trim prefix="set" suffixOverrides=",">
            <if test="title!=null">
                title=#{title},
            </if>
            <if test="author!=null">
                author=#{author}
            </if>
        </trim>
        where id=#{id}
    </update>

<!--SELECT * FROM `blog` WHERE 1 = 1 AND (id = 1 OR id = 2 OR id = 3)
我们现在传递一个万能的map，这map中可以存在一个集合-->
    <select id="queryByForeach" parameterType="map" resultType="blog">
        select * from mybatis.blog
        <where>
            <foreach collection="ids" item="id" open="and (" close=")" separator="or">
                id=#{id}
            </foreach>
        </where>
    </select>
</mapper>